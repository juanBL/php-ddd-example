{{- range $name, $worker := .Values.deployments.workers }}
kind: Deployment
apiVersion: apps/v1

metadata:
  name: "{{ $.Release.Name }}-worker-{{ $name }}"
  namespace: '{{ $.Release.Namespace }}'
  labels:
    app.kubernetes.io/instance: '{{ $.Release.Name }}'
    app.kubernetes.io/component: 'worker-{{ $name }}'
  annotations:
    kubernetes.io/change-cause: "{{ $worker.image }}"

spec:
  revisionHistoryLimit: {{ $.Values.deployments.revisionHistoryLimit }}

  selector:
    matchLabels:
      app.kubernetes.io/instance: '{{ $.Release.Name }}'
      app.kubernetes.io/component: 'worker-{{ $name }}'

  template:
    metadata:
      labels:
        app.kubernetes.io/instance: '{{ $.Release.Name }}'
        app.kubernetes.io/component: 'worker-{{ $name }}'

    spec:
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: '{{ $.Release.Name }}'
              app.kubernetes.io/component: 'worker-{{ $name }}'

      affinity:
        {{ toYaml $.Values.affinity | nindent 12 }}

      containers:
      {{- range $k, $v := $worker.commands }}
        - name: {{ $k }}
          image: {{ $worker.image }}
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1000
            allowPrivilegeEscalation: false
          envFrom:
            - configMapRef:
                name:  "{{ $.Release.Name }}-worker-{{ $name }}"
            - secretRef:
                name: "{{ $.Release.Name }}-worker-{{ $name }}"
            - secretRef:
                name: "{{ $.Release.Name }}"
            - configMapRef:
                name: "{{ $.Release.Name }}"
          command: ["/bin/sh", "-c", "{{ $v }}"]
      {{ end }}

      imagePullSecrets:
        {{- range $secret := $.Values.pullSecrets }}
        - name: "{{ $secret }}"
        {{- end }}

---
{{- end }}
